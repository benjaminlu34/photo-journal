{
  "component": "StickyNoteBlock",
  "version": "move-resize-grips-v1",
  "purpose": "Eliminate drag/resize ambiguity with dedicated grips; maintain 60 fps, a11y-first.",
  "ui": {
    "moveGrip": {
      "type": "bar",
      "position": "top",
      "heightPx": 32,
      "colorDelta": "-6% darker than note",
      "cursor": { "idle": "grab", "active": "grabbing" },
      "alwaysVisible": true
    },
    "resizeHandles": {
      "count": 8,
      "sizePx": 8,
      "dirs": ["nw","n","ne","e","se","s","sw","w"],
      "offsetPx": -4,
      "visibility": "hover | focus | selected | touchAlwaysOn",
      "cursors": {
        "n": "ns-resize", "e": "ew-resize",
        "s": "ns-resize", "w": "ew-resize",
        "ne": "nesw-resize", "nw": "nwse-resize",
        "se": "nwse-resize", "sw": "nesw-resize"
      }
    }
  },
  "domStructure": [
    "<div class='sticky' ref='styleRef' .../>",
    "<div class='move-grip' onPointerDown='startDrag'/>",
    "<div class='resize-handle nw' data-dir='nw' onPointerDown='startResize'/>",
    "... other 7 handles ..."
  ],
  "css": {
    ".move-grip": "absolute top-0 left-0 w-full h-8 rounded-t-xl bg-black/5",
    ".resize-handle": "absolute w-2 h-2 bg-transparent rounded opacity-0 transition",
    ".sticky:hover .resize-handle, .sticky:focus-within .resize-handle": "opacity-100"
  },
  "pointerLogic": {
    "common": [
      "e.stopPropagation()",
      "e.currentTarget.setPointerCapture(e.pointerId)",
      "origin = {clientX, clientY, ...blockState}"
    ],
    "modes": {
      "move": {
        "start": "mode = 'move'",
        "update": "translate3d(x,y,0) via RAF",
        "end": "PATCH /block once with {x,y}"
      },
      "resize": {
        "start": "mode = 'resize', dir = dataset.dir",
        "update": "compute w/h delta by dir, apply transform+size via RAF",
        "end": "PATCH /block once with {x,y,w,h}"
      }
    }
  },
  "keyboardMap": {
    "focus": {
      "moveGrip": {
        "Arrow": "±2 px translate (shift=±10 px)",
        "Enter": "toggle drag latch",
        "Esc": "cancel drag"
      },
      "resizeHandle": {
        "Arrow": "±2 px edge grow/shrink",
        "Enter": "toggle resize latch",
        "Esc": "cancel resize"
      }
    },
    "aria": {
      "moveGrip": "role='toolbar'",
      "resizeHandle": "role='separator' aria-orientation='vertical|horizontal'",
      "liveRegion": "announce 'Width 220 px, Height 180 px'"
    }
  },
  "touch": {
    "resizeHandlesAlwaysVisible": true,
    "longPressBodyMs": 350,
    "longPressAction": "startDrag"
  },
  "performanceNotes": {
    "state": "position/size kept in useRef, React setState only on pointerup",
    "domReads": "workspaceRect cached at drag start",
    "paint": "translate3d GPU-accelerated"
  },
  "integrationSteps": [
    "1. Inject DOM/CSS for grips.",
    "2. Replace per-block react-dnd with pointer handlers.",
    "3. Implement RAF-based updateVisual().",
    "4. Persist single PATCH or Yjs patch on pointerup.",
    "5. QA mouse/touch/keyboard; verify no accidental grip overlap."
  ]
}
