Summary

Identified a single Yjs room (“photo-journal-board”) causing all boards to share one space and ignoring the spaceId prop.

Grid‑snap state exists but dragging logic bypasses it, leading to sloppy note placement.

Text note input is saved without sanitization, opening XSS risk.

Collaboration hook retries WebRTC only three times, with no offline reconciliation.

Cursor updates are unused so peers cannot see each other.

Architecture

The repo is split into a React client, an Express server, and shared Drizzle ORM schemas. Daily pinboards load in home.tsx via JournalProvider, which fetches entries with React Query. The workspace renders StickyBoard, which supplies note CRUD actions through a Zustand store and the NoteContext. Each note goes through StickyNoteShell to a component from noteRegistry.

graph TD
    Home --> JournalProvider --> JournalWorkspace --> StickyBoard
    StickyBoard --> NoteContextProvider --> StickyNoteShell
    StickyNoteShell --> noteRegistry
    noteRegistry --> TextNote & ChecklistNote & ImageNote & VoiceNote & DrawingNote
Data flow and state:

graph TD
    Client -->|REST| ExpressAPI -->|SQL| DB
    Client -->|Yjs/WebRTC| Peers
    Client -->|IndexedDB| LocalCache
    ZustandStore -.-> Client
    JournalContext -.-> Client
    QueryCache -.-> Client
Cross‑cuts: security helpers (security.ts), error boundaries (ErrorBoundary.tsx), and a cleanup manager handle stale notes and assets.

Issues

ISSUE_001

Category: sync

Severity: critical

Short: All boards share a constant Yjs room

Detail: useCollaboration.ts hardcodes ROOM_NAME = 'photo-journal-board' and StickyBoard ignores its spaceId prop, so every user joins the same room regardless of date, causing cross‑board interference. 

ISSUE_002

Category: ux

Severity: high

Short: Grid snap toggle has no effect

Detail: noteContext.tsx exposes gridSnapEnabled but StickyNoteShell bypasses snapping logic when dragging; positions are applied raw. 

ISSUE_003

Category: security

Severity: high

Short: Text note content unsanitized

Detail: TextNote writes user input directly into state without calling security.sanitizeHtml, enabling potential XSS. 

ISSUE_004

Category: sync

Severity: high

Short: Limited WebRTC retry and no offline reconciliation

Detail: useCollaboration retries connection only three times and lacks logic for reconnecting or merging offline edits, leaving boards desynced after network issues. 

ISSUE_005

Category: ux

Severity: medium

Short: Cursor sharing unused

Detail: StickyBoard acquires updateCursor from useCollaboration but never calls it, so other users cannot see pointer movements. 

ISSUE_006

Category: code-quality

Severity: medium

Short: No automated tests

Detail: Repository lacks any .test.ts(x) files; critical logic like note store and Yjs sync have no coverage.

ISSUE_007

Category: security

Severity: medium

Short: Rate limiting only client-side

Detail: security.checkRateLimit in the Zustand store throttles note actions but there is no corresponding server middleware, so malicious clients can bypass limits.

ISSUE_008

Category: performance

Severity: low

Short: Potential RAF overuse during drag

Detail: Every dragged note schedules a requestAnimationFrame loop; with many notes this could stress the main thread. 

Tasks

TASK_001

Parent Issue: ISSUE_001

Priority: 1

Estimate Hours: 2

Area: client

Description: Use spaceId to create per-board room names in useCollaboration and pass from StickyBoard.

Acceptance Criteria:

StickyBoard accepts spaceId prop and forwards it to useCollaboration.

Yjs provider and IndexedDB key include the given room name.

Blocking Dependencies: []

Related Files: ["client/src/hooks/useCollaboration.ts:37-85", "client/src/components/board/StickyBoard.tsx:17-30"]

TASK_002

Parent Issue: ISSUE_002

Priority: 2

Estimate Hours: 3

Area: client

Description: Apply grid snapping when moving/resizing notes.

Acceptance Criteria:

Dragging a note snaps its position to 20px increments when gridSnapEnabled is true.

Toggle persists in NoteContext and updates visuals.

Blocking Dependencies: []

Related Files: ["client/src/components/noteShell/StickyNoteShell.tsx:108-116", "client/src/components/board/noteContext.tsx:36-39"]

TASK_003

Parent Issue: ISSUE_003

Priority: 3

Estimate Hours: 1

Area: client

Description: Sanitize text note input.

Acceptance Criteria:

TextNote sanitizes text with security.sanitizeHtml before calling onChange.

Unit test verifies malicious HTML is stripped.

Blocking Dependencies: []

Related Files: ["client/src/components/noteTypes/TextNote.tsx:24-35"]

TASK_004

Parent Issue: ISSUE_004

Priority: 3

Estimate Hours: 4

Area: client

Description: Improve Yjs reconnection and offline merge.

Acceptance Criteria:

Connection retries with exponential backoff until success.

Local edits made offline sync when connection restores.

Blocking Dependencies: []

Related Files: ["client/src/hooks/useCollaboration.ts:60-88"]

TASK_005

Parent Issue: ISSUE_005

Priority: 4

Estimate Hours: 2

Area: client

Description: Broadcast cursor positions.

Acceptance Criteria:

Moving pointer over the board calls updateCursor.

Remote cursors render with user color/name.

Blocking Dependencies: ["TASK_001"]

Related Files: ["client/src/components/board/StickyBoard.tsx:27-30"]

TASK_006

Parent Issue: ISSUE_006

Priority: 5

Estimate Hours: 6

Area: shared

Description: Add unit tests for note store and collaboration logic.

Acceptance Criteria:

Jest tests cover add/update/delete in useBoardStore.

Test ensures Yjs updates propagate correctly.

Blocking Dependencies: []

Related Files: ["client/src/lib/store.ts:80-240", "client/src/hooks/useCollaboration.ts:37-160"]

TASK_007

Parent Issue: ISSUE_007

Priority: 5

Estimate Hours: 3

Area: server

Description: Implement server-side rate limiting middleware.

Acceptance Criteria:

API rejects requests exceeding configurable limit per user.

Returns HTTP 429 with retry time.

Blocking Dependencies: []

Related Files: ["server/routes.ts", "client/src/lib/security.ts:123-149"]

TASK_008

Parent Issue: ISSUE_008

Priority: 6

Estimate Hours: 2

Area: client

Description: Throttle requestAnimationFrame usage when many notes are dragged simultaneously.

Acceptance Criteria:

Dragging multiple notes keeps frame rate above 55 FPS on mid‑range devices.

Blocking Dependencies: []

Related Files: ["client/src/components/noteShell/StickyNoteShell.tsx:115-127"]